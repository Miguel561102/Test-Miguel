# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'azDevTFTestRG01'
  bkstrg: 'Cirazadopstest01'
  bkcontainer: 'tfstate'
  bkstrgkey: 'devpipeline.terraform.tfstate'

stages:
  -  stage: tfvalidate
     jobs:
       - job: validate
         continueOnError: false
         steps:
           - task: TerraformInstaller@1
             displayName: tfinstall
             inputs:
               terraformVersion: 'latest'
           - task: TerraformTaskV1@0
             displayName: init
             inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'DevTestServicesConnection'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName:  '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
           - task: TerraformTaskV4@4
             displayName: validate
             inputs:
               provider: 'azurerm'
               command: 'validate'
  - stage: tftddeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV1@0
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'DevTestServicesConnection'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName:  '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'DevTestServicesConnection'
          - task: TerraformTaskV4@4
            displayName: apply
            inputs:
                provider: 'azurerm'
                command: 'apply'
                environmentServiceNameAzureRM: 'DevTestServicesConnection'
